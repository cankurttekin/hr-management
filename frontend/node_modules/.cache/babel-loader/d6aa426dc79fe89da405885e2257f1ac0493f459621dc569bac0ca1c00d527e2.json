{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/denemee/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { login as loginService } from '../services/authService'; // Import the login function from authService\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  // Check authentication status on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      setUser(decodedToken.sub);\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await loginService(username, password);\n      const {\n        token\n      } = response;\n      if (token) {\n        localStorage.setItem('token', token);\n        setIsLoggedIn(true); // Trigger re-render for components that depend on this state\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\n        setUser(decodedToken.sub);\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      throw error; // Re-throw the error to handle it in `Login.js`\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(AuthProvider, \"Ki3p4Ug0OIeovJYgYQgFusbAAO4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","login","loginService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","user","setUser","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","sub","username","password","response","setItem","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/denemee/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { login as loginService } from '../services/authService'; // Import the login function from authService\n\nexport const AuthContext = createContext();\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  // Check authentication status on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      setUser(decodedToken.sub);\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await loginService(username, password);\n      const { token } = response;\n\n      if (token) {\n        localStorage.setItem('token', token);\n        setIsLoggedIn(true); // Trigger re-render for components that depend on this state\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\n        setUser(decodedToken.sub);\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      throw error; // Re-throw the error to handle it in `Login.js`\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n\n  return (\n      <AuthContext.Provider value={{ isLoggedIn, user, login, logout }}>\n        {children}\n      </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,KAAK,IAAIC,YAAY,QAAQ,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjE,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTH,aAAa,CAAC,IAAI,CAAC;MACnB,MAAMM,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DR,OAAO,CAACI,YAAY,CAACK,GAAG,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMpB,KAAK,GAAG,MAAAA,CAAOqB,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtB,YAAY,CAACoB,QAAQ,EAAEC,QAAQ,CAAC;MACvD,MAAM;QAAEV;MAAM,CAAC,GAAGW,QAAQ;MAE1B,IAAIX,KAAK,EAAE;QACTC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;QACpCH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACrB,MAAMM,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1DR,OAAO,CAACI,YAAY,CAACK,GAAG,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChCnB,aAAa,CAAC,KAAK,CAAC;IACpBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,UAAU;MAAEE,IAAI;MAAEV,KAAK;MAAE2B;IAAO,CAAE;IAAArB,QAAA,EAC9DA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE7B,CAAC;AAAC3B,EAAA,CA1CWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}